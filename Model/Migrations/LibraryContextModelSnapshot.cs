// <auto-generated />
using System;
using ChadsLibraryPortfolio.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChadsLibraryPortfolio.Model.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("CoverImage")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("PublicationDate")
                        .HasColumnType("DATE");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("BookId");

                    b.HasIndex("Isbn")
                        .IsUnique()
                        .HasDatabaseName("IX_Book_Isbn");

                    b.HasIndex("Title", "Author")
                        .IsUnique()
                        .HasDatabaseName("IX_Book_TitleAuthor");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("ChadsLibraryPortfolio.Model.Entities.InventoryLog", b =>
                {
                    b.Property<int>("InventoryLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryLogId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckinDate")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("CheckoutDate")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("DATE");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("InventoryLogId");

                    b.HasIndex("BookId");

                    b.ToTable("InventoryLogs");
                });

            modelBuilder.Entity("ChadsLibraryPortfolio.Model.Entities.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("BookId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ChadsLibraryPortfolio.Model.Entities.InventoryLog", b =>
                {
                    b.HasOne("ChadsLibraryPortfolio.Model.Entities.Book", "Book")
                        .WithMany("InventoryLogs")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("ChadsLibraryPortfolio.Model.Entities.Review", b =>
                {
                    b.HasOne("ChadsLibraryPortfolio.Model.Entities.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("ChadsLibraryPortfolio.Model.Entities.Book", b =>
                {
                    b.Navigation("InventoryLogs");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
